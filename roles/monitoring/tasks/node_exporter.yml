- name: Create system user for node_exporter
  user:
    name: "{{ node_exporter_user }}"
    shell: /usr/sbin/nologin
    system: yes
    create_home: no

- name: Download node_exporter archive
  get_url:
    url: "{{ node_exporter_download_url }}"
    dest: "/tmp/node_exporter.tar.gz"
    mode: '0644'

- name: Check if node_exporter is already extracted
  stat:
    path: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
  register: node_exporter_extracted

- name: Extract node_exporter archive
  unarchive:
    src: "/tmp/node_exporter.tar.gz"
    dest: "/tmp"
    remote_src: yes
  when: not node_exporter_extracted.stat.exists

- name: Move node_exporter binary to install directory
  command: >
    mv /tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter {{ node_exporter_install_dir }}/node_exporter
  args:
    creates: "{{ node_exporter_install_dir }}/node_exporter"

- name: Set permissions on node_exporter binary
  file:
    path: "{{ node_exporter_install_dir }}/node_exporter"
    owner: root
    group: root
    mode: '0755'

- name: Create systemd service file for node_exporter
  copy:
    dest: /etc/systemd/system/node_exporter.service
    content: |
      [Unit]
      Description=Node Exporter
      After=network.target

      [Service]
      ExecStart={{ node_exporter_install_dir }}/node_exporter
      Restart=always
      User={{ node_exporter_user }}

      [Install]
      WantedBy=multi-user.target
  register: node_exporter_unit

- name: Restart node_exporter service if service file changed
  systemd:
    name: node_exporter
    state: restarted
  when: node_exporter_unit.changed
